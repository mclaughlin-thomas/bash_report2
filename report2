#!/bin/bash
#
# Filename: report2
#
# Author: Thomas McLaughlin
#
# Date: Apr 18, 2024
# Revised: Apr 22, 2024
#
# Description:  This bash script when run, acts as a menu-driven program. The script repeatedly presents the 
#               the user with a menu where the user can select any of the following options and display their
#               information respectively. This script can show the following information:
#
#               0 - Quit the program
#               1 - Show user info including: username, fullname, home directory, shell, password expiration info and IP address
#               2 - Show the last several lines of the webserver access log for this user
#               3 - Show the last several lines of the webserver error log for this user
#               4 - Show the last several logins for this user
#               5 - Max number of processes for user, sftp connections
#               6 - Show the open TCP ports
#               7 - Display the following system information: uptime and users on the system, and whether the webserver appears to be running
#               8 - Change the default number of lines to show in choices 2, 3, 4


userInput=1
userName=`whoami`
InitialIPaddress=`who am i | cut -d '(' -f2 | cut -d ')' -f1`

defaultLines=15 
if [ $# -eq 1 ]
then
   defaultLines=$1 # setting numberLastLogins to parameter provided, if a parameter is provided
fi


while [ "$userInput" != "0" ]
do
    echo 
    echo "Report 2"
    echo
    echo "   0 -  Quit"
    echo "   1 -  Show user info including: username, fullname, home directory, shell, password expiration info and IP address"
    echo "   2 -  Show the last several lines of the webserver access log for this user"
    echo "   3 -  Show the last several lines of the webserver error log for this user"
    echo "   4 -  Show the last several logins for this user"
    echo "   5 -  xxx"
    echo "   6 -  Show the open TCP ports"
    echo "   7 -  Display the following system information: uptime and users on the system, and whether the webserver appears to be running"
    echo "   8 -  Change the default number of lines to show in choices 2, 3, 4"
    echo "   DEBUGGER defualt lines: $defaultLines"
    echo "Enter number for your choice: "
    read userInput

    if [ "$userInput" = "1" ]
    then

        userEntryData=$(cat /etc/passwd | grep $userName)
        passwordExpirationLine=$(chage -l $userName | grep "Password expires")

        fullName=$(echo "$userEntryData" | cut -d ':' -f 5) # -f 5 because we want 5th column of data as shown above
        homeDirectory=$(echo "$userEntryData" | cut -d ':' -f 6) # -f 6 because we want 6th column of data as shown above
        shell=$(echo "$userEntryData" | cut -d ':' -f 7) # -f 7 because we want 7th column of data as shown above
        #      username:pass:UID:GID:Fullname:homeDir:shell
        #         1    :  2 : 3 : 4 :   5    :   6   :  7

        passwordExpirationDate=$(echo "$passwordExpirationLine" | cut -d ':' -f 2) # -f because we want 2nd column of data as shown above
        #      Password expires     :   Jun 12, 2024
        #               1           :         2

        echo 
        echo " (1) User Information:"
        echo "     - Username : $userName"
        echo "     - Full Name : $fullName"
        echo "     - Home Directory : $homeDirectory"
        echo "     - Shell : $shell"
        echo "     - Password Expiration Information : $passwordExpirationDate"
        echo "     - IP Address : $InitialIPaddress"
        
        echo
        echo "Press ENTER"
        read junk

    elif [ "$userInput" = "2" ]
    then

        echo
        echo "Fields are: IP address, date and time, HTTP method, path to page, query string, content type, status code,"
        echo "content size (bytes), total size (bytes), client browser info, response time (microseconds)"
        echo
        grep "$InitialIPaddress" /var/log/httpd/access_log | grep -v '/pma/' | tail "-$defaultLines"
        echo

        echo
        echo "Press ENTER"
        read junk

    elif [ "$userInput" = "3" ]
    then
        
        echo
        grep "$InitialIPaddress" /var/log/httpd/error_log | tail "-$defaultLines"
        echo

        echo
        echo "Press ENTER"
        read junk

    elif [ "$userInput" = "4" ]
    then
        loginData=$(last -$defaultLines $userName | grep -v "wtmp")
        echo 
        echo " (4) Last Several Logins For This User"
        echo "$loginData"

        echo
        echo "Press ENTER"
        read junk

    elif [ "$userInput" = "5" ]
    then
        echo "My Choice"

        maxProcess=$(ulimit -u)
        echo "Max number of processes for user: $maxProcess"
        echo

        curProcess=$(ps -u $userName --no-headers | wc -l)
        echo "Number of processes running for this user: $curProcess"
        echo

        remainingProcesses=$((maxProcess - curProcess))

        echo "Number of processes left for this user: $remainingProcesses"

        echo
        echo "Press ENTER"
        read junk

    elif [ "$userInput" = "6" ]
    then
        tcpOpenPortData=$(netstat -tan)

        echo 
        echo " (6) Open TCP Ports"
        echo "$tcpOpenPortData"

        echo
        echo "Press ENTER"
        read junk

    elif [ "$userInput" = "7" ]
    then
        echo 
        echo " (7) System Information:"
        echo
        echo "$(w)"
        echo
        if ps aux | grep -q '[h]ttpd'; then
            echo "     The web server is up..."
        else
            serverUp=false
            echo "     The web server is NOT up..."
        fi

        echo
        echo "Press ENTER"
        read junk

    elif [ "$userInput" = "8" ]
    then
        echo
        echo "Enter the new default number of lines to show in choices 2, 3, 4 "
        read defaultLines

    fi

   
done
